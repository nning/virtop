#!/usr/bin/env ruby

begin
	require 'libvirt'
	require 'uri'
rescue LoadError => e
	$stderr.puts( e.message )
	exit( 1 )
end

begin
	require 'ncurses'
rescue LoadError
	$stderr.puts <<EOF
The Ruby bindings to the ncurses library are missing. The ncurses gem on
rubygems.org is not working with Ruby 1.9, so please issue the following
commands as superuser to install a working ncurses gem from github.com:

  gem source -a http://gems.github.com
  gem install elliottcable-ncurses

EOF
	exit( 1 )
end

if( ARGV.size < 1 )
	url = 'qemu:///system'
else
	uri = URI.parse( ARGV.first )

	if( uri.scheme == 'qemu+ssh' and uri.path == '' )
		raise( Exception.new( 'invalid url specified' ) )
	else
		url = uri.to_s
	end
end

class LetsExit < Exception
end

module Libvirt
	class Connect
		def domains
			ret = Array.new

			self.list_domains.each do |id|
				ret.push( 
					self.lookup_domain_by_id( id )
				)
			end

			ret
		end
	end

	class Domain
		def to_s
			self.name
		end

		def state
			case( self.info.state )
				when 1
					">"
				when 3
					"||"
				else
					"?"
			end
		end

		def mem
			( self.info.memory / 1024 ).to_s + "M"
		end

		def mem_max
			( self.info.max_mem / 1024 ).to_s + "M"
		end

		def cpu_num
			self.info.nr_virt_cpu.to_s
		end

		def cpu_time
			self.info.cpu_time.to_s
		end
	end
end

begin
	c = Libvirt::open( url )
rescue Libvirt::ConnectionError
	$stderr.puts( 'connection failed' )
	exit( 1 )
end

begin
	n = Ncurses.initscr

	Ncurses.cbreak
	Ncurses.noecho
	Ncurses.halfdelay( 10 )

	while( true )
		Ncurses.clear

		n.intrflush( false )
		n.keypad( true )

		n.addstr(
			"name\t\tstate\tmem\tmem_max\tcpu_num\tcpu_time\n\n"
		)

		c.domains.each do |domain|
			n.addstr(
				domain.name		+ "\t" +
				domain.state	+ "\t" +
				domain.mem		+ "\t" +
				domain.mem_max	+ "\t" +
				domain.cpu_num	+ "\t" +
				domain.cpu_time	+ "\n"
			)
		end

		n.refresh
		raise( LetsExit ) if( n.getch == 113 )
	end
rescue LetsExit
ensure
	Ncurses.echo
	Ncurses.cbreak
	Ncurses.endwin
end
