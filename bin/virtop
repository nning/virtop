#!/usr/bin/env ruby

# Require libvirt and uri modules and print out exception message if they could
# not be loaded.
begin
	require( 'libvirt' )
	require( 'uri' )
rescue LoadError => e
	$stderr.puts( e.message )
	exit( 1 )
end

# Require ncurses module and print out instructions howto install it if it could
# not be loaded.
begin
	require 'ncurses'
rescue LoadError
	$stderr.puts <<EOF
The Ruby bindings to the ncurses library are missing. The ncurses gem on
rubygems.org is not working with Ruby 1.9, so please issue the following
commands as superuser to install a working ncurses gem from github.com:

  gem source -a http://gems.github.com
  gem install elliottcable-ncurses

EOF
	exit( 1 )
end

# Require virtop module. If not installed as gem, try it in the source's
# directory.
begin
	require( 'virtop' )
rescue LoadError
	require( File.dirname( __FILE__ ) + '/../lib/virtop' )
end

# Connection URL will be qemu:///system if nothing else is given as the first
# parameter.
if( ARGV.size < 1 )
	url = 'qemu:///system'
else
	uri = URI.parse( ARGV.first )

	if( uri.scheme == 'qemu+ssh' and uri.path == '' )
		raise( Exception.new( 'invalid url specified' ) )
	else
		url = uri.to_s
	end
end

# Open the connection to the libvirt ressource or print out error message.
begin
	c = Libvirt::open( url )
rescue Libvirt::ConnectionError
	$stderr.puts( 'connection failed' )
	exit( 1 )
end

# Initialize ncurses context. Clear and print details for each domain in a 10s
# interval. Quit on keypress of 'q'.
begin
	n = Ncurses.initscr

	Ncurses.cbreak
	Ncurses.noecho
	Ncurses.halfdelay( 10 )

	while( true )
		Ncurses.clear

		n.intrflush( false )
		n.keypad( true )

		n.addstr(
			"name\t\tstate\tmem\tmem_max\tcpu_num\tcpu_time\n\n"
		)

		c.domains.each do |domain|
			n.addstr(
				domain.name		+ "\t" +
				domain.state	+ "\t" +
				domain.mem		+ "\t" +
				domain.mem_max	+ "\t" +
				domain.cpu_num	+ "\t" +
				domain.cpu_time	+ "\n"
			)
		end

		n.refresh
		raise( LetsExit ) if( n.getch == 113 )
	end
rescue LetsExit
ensure
	Ncurses.echo
	Ncurses.cbreak
	Ncurses.endwin
end
